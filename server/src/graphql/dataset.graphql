# import PageInfo from "./common.graphql"
# import Group, GroupWhereUniqueInput from "./group.graphql"
# import Secret, SecretCreateOneInput, SecretUpdateOneInput from "./secret.graphql"

type Dataset {
  id: ID!
  name: String!
  displayName: String
  description: String
  global: Boolean
  type: String
  url: String
  variables: JSON
  volumeName: String
  writable: Boolean
  spec: JSON
  groups: [Group]
  secret: Secret
}

"""An edge in a connection."""
type DatasetEdge {
  """The item at the end of the edge."""
  node: Dataset!

  """A cursor for use in pagination."""
  cursor: String!
}

type DatasetConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DatasetEdge]!
}

input DatasetWhereUniqueInput {
  id: ID!
}

input DatasetWhereInput {
  id: ID
  name_contains: String
  displayName_contains: String
}

"""group relation"""
input DatasetGroupWhereUniqueInput {
  id: ID!
  writable: Boolean
}

input DatasetGroupCreateManyInput {
  create: [DatasetGroupCreateInput!]
  connect: [DatasetGroupWhereUniqueInput!]
}

input DatasetGroupUpdateManyInput {
  create: [DatasetGroupUpdateInput!]
  connect: [DatasetGroupWhereUniqueInput!]
  disconnect: [GroupWhereUniqueInput!]
  delete: [GroupWhereUniqueInput!]
}

input DatasetGroupCreateInput {
  name: String!
  displayName: String
  quotaCpu: Float
  quotaGpu: Int
  quotaMemory: Float
  quotaDisk: Int
  projectQuotaCpu: Float
  projectQuotaGpu: Int
  projectQuotaMemory: Float
  writable: Boolean
  # users: UserCreateManyInput
}

input DatasetGroupUpdateInput {
  name: String
  displayName: String
  quotaCpu: Float
  quotaGpu: Int
  quotaMemory: Float
  quotaDisk: Int
  projectQuotaCpu: Float
  projectQuotaGpu: Int
  projectQuotaMemory: Float
  writable: Boolean
  # users: UserUpdateManyInput
}


"""Mutation input"""
input DatasetCreateInput {
  name: String!
  displayName: String
  description: String
  global: Boolean
  type: String
  url: String
  variables: JSON
  volumeName: String
  groups: DatasetGroupCreateManyInput
  secret: SecretCreateOneInput
}

input DatasetUpdateInput {
  name: String
  displayName: String
  description: String
  global: Boolean
  type: String
  url: String
  variables: JSON
  volumeName: String
  groups: DatasetGroupUpdateManyInput
  secret: SecretUpdateOneInput
}
