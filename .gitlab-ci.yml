image: docker:18-git
services:
  - docker:18-dind

variables:
  REGISTRY: registry.gitlab.com
  REPOSITORY: "${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"

stages:
  - test
  - e2e
  - release

# require some time to investigate how to set it properly
# compile:frontend:
#   stage: test
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}
#     paths:
#       - client/node_modules/
#   image:
#     name: node:carbon-slim
#   only:
#     - master
#   script:
#     - cd client && yarn && npm run build
#   artifacts:
#     paths:
#       - client/dist/

# compile:backend:
#   stage: test
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}
#     paths:
#       - server/node_modules/
#   image:
#     name: node:carbon-slim
#   only:
#     - master
#   script:
#     - cd server && yarn install --ignore-engines
#   artifacts:
#     paths:
#       - server/node_modules/

test:
  services:
    - name: jboss/keycloak
      alias: keycloak.local
  variables:
    KEYCLOAK_USER: wwwy3y3
    KEYCLOAK_PASSWORD: wwwy3y3
  image:
    name: wwwy3y3/minikube-ci-node:8
    # override the default command. so that gitlab-ci can run the shell
    entrypoint: []
  stage: test
  only:
    - master
  before_script:
    - date
    # start kubernetes
    - sudo bash ci/start.sh &
  script:
     # Check keycloak endpoints
    - date
    - sudo bash ci/keycloak-endpoint.sh

    # Wait for kubernetes ready
    - >
      JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
      until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True";
      do sleep 1;
      done

    # install and run test
    - npx lerna bootstrap
    - cd packages/graphql-server && KC_MAX_SOCKETS=30 KC_API_BASEURL=http://keycloak.local:8080/auth KC_OIDC_BASEURL=http://keycloak.local:8080/auth npm run test
    # - cd ../client && yarn && npm run build
    # - cd ../server && KC_OIDC_TIMEOUT=6000 KC_MAX_SOCKETS=30 KC_API_BASEURL=http://keycloak.local:8080/auth KC_OIDC_BASEURL=http://keycloak.local:8080/auth npm run test:e2e
  after_script:
    - date
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - node_modules/
      - packages/admin-server/node_modules/
      - packages/client/node_modules/
      - packages/graphql-server/node_modules/
      - packages/watcher/node_modules/


#build:
  #stage: build
  #script:
    #- echo "${DOCKER_DRIVER}"
    #- docker login -u gitlab-ci-token -p "${CI_BUILD_TOKEN}" "${REGISTRY}"
    #- docker build -t "${REGISTRY}/${REPOSITORY}/admin-server:${CI_COMMIT_SHA:0:7}" -f packages/admin-server/Dockerfile .
    #- docker push "${REGISTRY}/${REPOSITORY}/admin-server:${CI_COMMIT_SHA:0:7}"
    #- docker build -t "${REGISTRY}/${REPOSITORY}/admin-server-model-deploy:${CI_COMMIT_SHA:0:7}" -f packages/admin-server/overlay/model_deployment/Dockerfile .
    #- docker push "${REGISTRY}/${REPOSITORY}/admin-server-model-deploy:${CI_COMMIT_SHA:0:7}"
    #- docker build -t "${REGISTRY}/${REPOSITORY}/admin-server-ce:${CI_COMMIT_SHA:0:7}" -f packages/admin-server/overlay/ce/Dockerfile .
    #- docker push "${REGISTRY}/${REPOSITORY}/admin-server-ce:${CI_COMMIT_SHA:0:7}"
    #- docker build -t "${REGISTRY}/${REPOSITORY}/graphql-server:${CI_COMMIT_SHA:0:7}" -f packages/graphql-server/Dockerfile .
    #- docker push "${REGISTRY}/${REPOSITORY}/graphql-server:${CI_COMMIT_SHA:0:7}"
    #- docker build -t "${REGISTRY}/${REPOSITORY}/graphql-server-ce:${CI_COMMIT_SHA:0:7}" -f packages/graphql-server/ce/Dockerfile .
    #- docker push "${REGISTRY}/${REPOSITORY}/graphql-server-ce:${CI_COMMIT_SHA:0:7}"
    #- docker build -t "${REGISTRY}/${REPOSITORY}/watcher:${CI_COMMIT_SHA:0:7}" -f packages/watcher/Dockerfile .
    #- docker push "${REGISTRY}/${REPOSITORY}/watcher:${CI_COMMIT_SHA:0:7}"
  #only:
    #- master

release:tag:
  stage: release
  script:
    - echo "${DOCKER_USER}"
    - docker version
    - docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
    - docker build -t "infuseai/canner-admin-server:${CI_COMMIT_TAG}" -f packages/admin-server/Dockerfile .
    - docker push "infuseai/canner-admin-server:${CI_COMMIT_TAG}"
    - docker build -t "infuseai/canner-admin-server-model-deploy:${CI_COMMIT_TAG}" -f packages/admin-server/overlay/model_deployment/Dockerfile .
    - docker push "infuseai/canner-admin-server-model-deploy:${CI_COMMIT_TAG}"
    - docker build -t "infuseai/canner-admin-server-ce:${CI_COMMIT_TAG}" -f packages/admin-server/overlay/ce/Dockerfile .
    - docker push "infuseai/canner-admin-server-ce:${CI_COMMIT_TAG}"
    - docker build -t "infuseai/canner-graphql-server:${CI_COMMIT_TAG}" -f packages/graphql-server/Dockerfile .
    - docker push "infuseai/canner-graphql-server:${CI_COMMIT_TAG}"
    - docker build -t "infuseai/canner-graphql-server-ce:${CI_COMMIT_TAG}" -f packages/graphql-server/ce/Dockerfile .
    - docker push "infuseai/canner-graphql-server-ce:${CI_COMMIT_TAG}"
    - docker build -t "infuseai/canner-watcher:${CI_COMMIT_TAG}" -f packages/watcher/Dockerfile .
    - docker push "infuseai/canner-watcher:${CI_COMMIT_TAG}"
  only:
    - tags
