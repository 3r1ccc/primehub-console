# import PageInfo from "common.graphql"
# import User, UserCreateManyInput, UserUpdateManyInput from "user.graphql"
# import InstanceType from "instanceType.graphql"
# import Image from "image.graphql"
# import Dataset from "dataset.graphql"

type Group {
  id: ID!
  name: String!
  displayName: String
  quotaCpu: Float
  quotaGpu: Int
  quotaMemory: Float
  userVolumeCapacity: Int
  projectQuotaCpu: Float
  projectQuotaGpu: Int
  projectQuotaMemory: Float
  users: [User]
  instanceTypes: [InstanceType]
  images: [Image]
  datasets: [Dataset]
  # for relation with dataset
  writable: Boolean
  # shared volume
  enabledSharedVolume: Boolean
  sharedVolumeCapacity: Int
  homeSymlink: Boolean
  launchGroupOnly: Boolean
  # enabledDeployment
  enabledDeployment: Boolean
}

"""order"""
input GroupOrderByInput {
  name: String
  displayName: String
  userVolumeCapacity: String
  enabledSharedVolume: String
  quotaCpu: String
  quotaGpu: String
  projectQuotaGpu: String
}

"""An edge in a connection."""
type GroupEdge {
  """The item at the end of the edge."""
  node: Group!

  """A cursor for use in pagination."""
  cursor: String!
}

type GroupConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [GroupEdge]!
}

input GroupWhereUniqueInput {
  id: ID!
  # workspace
  workspaceId: String
}

input GroupWhereInput {
  id: ID
  name_contains: String
  displayName_contains: String
  # workspace
  workspaceId: String
}

input DatasetPlaceHolder {
  set: [String]
}

"""Mutation input"""
input GroupCreateInput {
  name: String!
  displayName: String
  quotaCpu: Float
  quotaGpu: Int
  quotaMemory: Float
  userVolumeCapacity: Int
  projectQuotaCpu: Float
  projectQuotaGpu: Int
  projectQuotaMemory: Float
  users: UserCreateManyInput
  writable: Boolean
   # shared volume
  enabledSharedVolume: Boolean
  sharedVolumeCapacity: Int
  homeSymlink: Boolean
  launchGroupOnly: Boolean
  # workspace
  workspaceId: String
  # dataset placeholder
  datasets: DatasetPlaceHolder
  # enabledDeployment
  enabledDeployment: Boolean
}

input GroupUpdateInput {
  name: String
  displayName: String
  quotaCpu: Float
  quotaGpu: Int
  quotaMemory: Float
  userVolumeCapacity: Int
  projectQuotaCpu: Float
  projectQuotaGpu: Int
  projectQuotaMemory: Float
  users: UserUpdateManyInput
  writable: Boolean
   # shared volume
  enabledSharedVolume: Boolean
  sharedVolumeCapacity: Int
  homeSymlink: Boolean
  launchGroupOnly: Boolean
  # dataset placeholder
  datasets: DatasetPlaceHolder
  # enabledDeployment
  enabledDeployment: Boolean
}

"""Relation input"""
input GroupCreateManyInput {
  create: [GroupCreateInput!]
  connect: [GroupWhereUniqueInput!]
}

input GroupUpdateManyInput {
  create: [GroupCreateInput!]
  connect: [GroupWhereUniqueInput!]
  disconnect: [GroupWhereUniqueInput!]
  delete: [GroupWhereUniqueInput!]
}
