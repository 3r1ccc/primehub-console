# import PageInfo from "common.graphql"

type Secret {
  id: ID!
  type: SecretType!
  name: String!
  displayName: String
  secret: String
  registryHost: String
  username: String
  password: String
}

enum SecretType {
  opaque
  kubernetes
}

"""order"""
input SecretOrderByInput {
  name: String
  displayName: String
}

"""An edge in a connection."""
type SecretEdge {
  """The item at the end of the edge."""
  node: Secret!

  """A cursor for use in pagination."""
  cursor: String!
}

type SecretConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SecretEdge]!
}

input SecretWhereUniqueInput {
  id: ID!
}

input SecretWhereInput {
  id: ID
  ifDockerConfigJson: Boolean
  search: String
}

"""Mutation input"""
input SecretCreateInput {
  name: String!
  type: SecretType
  displayName: String
  secret: String
  registryHost: String
  username: String
  password: String
}

input SecretUpdateInput {
  displayName: String
  type: SecretType
  secret: String
  registryHost: String
  username: String
  password: String
}

"""Relation input"""
input SecretCreateOneInput {
  create: SecretCreateInput
  connect: SecretWhereUniqueInput
}

input SecretUpdateOneInput {
  create: SecretCreateInput
  connect: SecretWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
}
