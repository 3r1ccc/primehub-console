# import PageInfo from "../../graphql/common.graphql"
# import InstanceType from "../../graphql/instanceType.graphql"
# import PhJob from "phJob.graphql"

type Recurrence {
  type: String
  cron: String
}

type PhSchedule {
  id: ID!
  displayName: String
  recurrence: Recurrence
  command: String
  groupId: String
  groupName: String
  image: String
  instanceType: InstanceType
  userId: String
  userName: String
  createTime: String
  updateTime: String
  nextRunTime: String
  invalid: Boolean
  message: String
}

"""order"""
input PhScheduleOrderByInput {
  displayName: String
  groupName: String
  userName: String
  nextRunTime: String
  createTime: String
}

type PhScheduleDeleteResponse {
  id: ID!
}

type PhScheduleRunResponse {
  job: PhJob
}

"""An edge in a connection."""
type PhScheduleEdge {
  """The item at the end of the edge."""
  node: PhSchedule!

  """A cursor for use in pagination."""
  cursor: String!
}

type PhScheduleConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PhScheduleEdge]!
}

input PhScheduleWhereUniqueInput {
  id: ID!
}

input PhScheduleWhereInput {
  id: ID
  groupId_in: [String]
  displayName_contains: String
  mine: Boolean
}

"""Mutation input"""
input RecurrenceInput {
  type: String
  cron: String
}

input PhScheduleCreateInput {
  displayName: String
  groupId: String
  instanceType: String
  image: String
  command: String
  recurrence: RecurrenceInput
  activeDeadlineSeconds: Int
}

input PhScheduleUpdateInput {
  displayName: String
  groupId: String
  instanceType: String
  image: String
  command: String
  recurrence: RecurrenceInput
  activeDeadlineSeconds: Int
}
