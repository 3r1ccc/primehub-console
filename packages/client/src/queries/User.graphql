#import './fragments/GroupInfo.graphql'
query CurrentUser {
  me {
    id
    username
    groups {
      ...GroupInfo
      instanceTypes {
        id
        name
        displayName
        description
        spec
        global
        gpuLimit
        memoryLimit
        cpuLimit
      }
      images {
        id
        name
        displayName
        description
        groupName
        isReady
        url
        urlForGpu
        useImagePullSecret
        spec
        global
        type
      }
    }
  }
}

query User($where: UserWhereUniqueInput!) {
  user(where: $where) {
    id
    username
    email
    firstName
    lastName
    enabled
    totp
    isAdmin
    volumeCapacity
  }
}

query UsersConnection($userAfter: String, $userBefore: String, $userLast: Int,$userFirst: Int, $where: UserWhereInput, $userOrderBy: UsersOrderBy) {
  users: usersConnection(after: $userAfter, before: $userBefore, last: $userLast, first: $userFirst,where: $where, userOrderBy: $userOrderBy) {
    edges {
      cursor
      node {
        id
        username
        email
        firstName
        lastName
        enabled
        totp
        isAdmin
      }
    }
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
  }
}

mutation DeleteUser($where: UserWhereUniqueInput!) {
  deleteUser(where: $where) {
    id
  }
}

mutation CreateUser($payload: UserCreateInput!) {
  createUser(data: $payload) {
    id
    username
  }
}
