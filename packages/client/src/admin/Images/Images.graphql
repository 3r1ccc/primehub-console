fragment ImageInfo on Image {
  id
  name
  displayName
  description
  type
}

query ImagesQuery(
  $page: Int
  $where: ImageWhereInput
  $orderBy: ImageOrderByInput
) {
  imagesConnection(
    page: $page
    orderBy: $orderBy
    where: $where
    mode: SYSTEM_ONLY
  ) {
    edges {
      cursor
      node {
        id
        ...ImageInfo
      }
    }
    pageInfo {
      currentPage
      totalPage
    }
  }
}

query ImageQuery($where: ImageWhereUniqueInput!) {
  image(where: $where) {
    id
    url
    urlForGpu
    useImagePullSecret
    global
    groups {
      id
      name
      displayName
    }
    imageSpec {
      baseImage
      pullSecret
      packages {
        apt
        conda
        pip
      }
    }
    ...ImageInfo
  }
}



query SecretsQuery {
  secrets(where: { ifDockerConfigJson: true }) {
    id
    name
    type
  }
}

query BaseImageQuery($where: ImageWhereInput!) {
  images(where: $where) {
    id
    url
    urlForGpu
    ...ImageInfo
  }
}


mutation CreateImageMutation($data: ImageCreateInput!) {
  createImage(data: $data) {
    id
  }
}


mutation DeleteImageMutation($where: ImageWhereUniqueInput!) {
  deleteImage(where: $where) {
    id
  }
}
